<%- include('../partials/top.ejs') %>
<small id="geo-status"></small>

<div class="list-box">
  <ul>
    <li>
      <div class="entry-info"><h2><%=place.name%></h2></div>
      <div class="entry-controls">
        <!-- only available when logged in  -->
        <% if (user) { %>
        <!-- ADD REPORT CARD BUTTON  -->
        <form action="/places/<%=place._id%>/reportcards/new" method="GET">
          <button title="Add A Report"><span class="material-icons"> thumbs_up_down </span> <span class="show-on-big-screens">Add Report</span></button>
        </form>
        <!-- EDIT PLACE BUTTON  -->
        <form action="/places/<%=place._id%>/edit" method="GET">
          <button title="Edit Place Details"><span class="material-icons"> edit_location_alt </span> <span class="show-on-big-screens">Edit Place</span></button>
        </form>
        <% } else { %>
        <a href="/auth/google" class="bubble"> Login with Google</a> to edit place and add a report <% } %>

        <!-- DELETE PLACE BUTTON  -->
        <!-- only available for authoring user  -->
        <% if (place.authorUserId.equals(user && user._id)) { %>
        <form action="/places/<%=place._id%>?_method=DELETE" method="POST">
          <button class="danger" title="Delete Place"><span class="material-icons"> clear </span> <span class="show-on-big-screens">Delete Place</span></button>
        </form>
        <% } %>
      </div>
    </li>
  </ul>
</div>

<!-- use to pass data from server to front end -->
<data class="geo-data" data-name="<%=place.name%>" data-lat="<%=place.loc.coordinates[0]%>" data-lng="<%=place.loc.coordinates[1]%>"></data>
<a href="/places"> Back to List of All Places</a>

<h5>Report Card(s)</h5>

<!-- List Report Cards for this PLACE -->
<div class="list-box">
  <ul>
    <li class="entry-header">
      <div class="entry-info-header">Report</div>
      <div class="entry-controls-header">Delete Your Report</div>
    </li>
    <!-- if statement below with || it to limit scope to just changing tables... eventually rf to display relevant properties -->
    <% place.reportcards.forEach(reportcard => { %> <% if (reportcard.hasChangingTableW || reportcard.hasChangingTableM) { %>
    <li class="entries">
      <div class="entry-info">
        <span class="date"><%= reportcard.createdAt.toLocaleString('en-US',{year: 'numeric', month: 'short', day: 'numeric'}) %></span>

        <!-- icon for womens room  -->
        <% if (reportcard.hasChangingTableW) { %>
        <span style="color: purple" class="entry-icon"> <span class="material-icons"> baby_changing_station </span>W</span><% } %>

        <!-- icon for mens room  -->
        <% if (reportcard.hasChangingTableM) { %>
        <span style="color: #003399" class="entry-icon"> <span class="material-icons"> baby_changing_station </span>M</span> <% } %>
      </div>
      <div class="entry-controls">
        <!-- DELETE REPORT CARD BUTTON   -->
        <!-- only for authoring user  -->
        <% if (reportcard.authorUserId.equals(user && user._id)) { %>
        <form action="/reportcards/<%=reportcard._id%>?_method=DELETE" method="POST">
          <button class="danger tiny" title="Delete Report"><span class="material-icons"> clear </span></button>
        </form>
        <% } %>
      </div>
    </li>
    <%}%> <% }) %>
  </ul>
</div>
<!-- display MAP showing THIS PLACE and USER LOCATION -->
<div id="map"></div>

<script src="/js/scripts.js"></script>
<script src="/js/maps.js"></script>
<!-- MAP API -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB2CGd_TVDT97bT076IBQWpm3h3gFtZGJM&&libraries=&v=weekly"></script>

<script defer>
  const status = document.querySelector('#geo-status');
  const geoDataEls = document.querySelectorAll('.geo-data');

  // create new array of place lat/lng based off array of data elements containg the same
  const mapPlaces = [...geoDataEls].map((el) => {
    const latLng = {};
    const location = {};
    latLng.lat = parseFloat(el.dataset.lat);
    latLng.lng = parseFloat(el.dataset.lng);
    location.latLng = latLng;
    location.title = el.dataset.name;

    return location;
  });

  // initialize userLocation to default lat/lng. set later to accurate geolcation if possible
  let userLocation = { lat: 43, lng: -50 };

  if (!navigator.geolocation) {
    status.textContent = 'Geolocation not supported. Try a different browser.';
    // call map with default user position if not supported
    initMap(userLocation, mapPlaces);
  } else {
    status.textContent = 'Locatingâ€¦';
    // success() sets userLocation and calls initMap()
    // error() keeps default userLocation and calls initMaps
    navigator.geolocation.getCurrentPosition(success, error);
  }
</script>

<%- include('../partials/bottom.ejs') %>
