<%- include('../partials/top.ejs', {user: user}) %>

<small id="geo-status" class="bubble"></small>

<!-- display MAP showing ALL PLACES and USER LOCATION -->
<div id="map"></div>

<% if (user) { %>
<a href="/places/new" class="bubble"> <span class="material-icons"> add_location_alt </span>Add A New Place </a>
<% } else { %>
<a href="/auth/google" class="bubble"> Login with Google</a> to add a place <% } %>

<div class="list-box">
  <ul>
    <!--  -->

    <% places.forEach((place) => { %>
    <!-- use to pass data from server to front end -->
    <data class="geo-data" data-name="<%=place.name%>" data-lat="<%=place.loc.coordinates[0]%>" data-lng="<%=place.loc.coordinates[1]%>"></data>
    <li>
      <div class="entry-info">
        <!-- icon for changing table  -->
        <span class="entry-icon"> <span class="material-icons"> baby_changing_station </span></span>

        <!-- make place name a link to view place details / report cards  -->
        <a class="big" href="/places/<%=place._id%>"><%= place.name %></a>
      </div>

      <div class="entry-controls">
        <% if (user) { %>
        <!-- ADD REPORT  BUTTON  -->
        <!-- only available when signed in   -->
        <form action="/places/<%=place._id%>/reportcards/new" method="GET">
          <button title="Grade This Place"><span class="material-icons"> thumbs_up_down </span><span class="show-on-big-screens">Add Report</span></button>
        </form>

        <!-- EDIT PLACE BUTTON  -->
        <!-- only available when signed in  -->
        <form action="/places/<%=place._id%>/edit" method="GET">
          <button title="Edit Place Details"><span class="material-icons"> edit_location_alt </span><span class="show-on-big-screens">Edit Place</span></button>
        </form>
        <% } else { %>
        <small><a href="/auth/google">Login with Google</a> to report a changing table</small>
        <% } %>

        <!-- DELETE PLACE BUTTON  -->
        <!-- only available when signed in as authoring user  -->
        <% if (place.authorUserId._id.equals(user && user._id)) { %>
        <form action="/places/<%=place._id%>?_method=DELETE" method="POST">
          <button class="danger" title="Delete Place"><span class="material-icons"> clear </span><span class="show-on-big-screens">Delete Place</span></button>
        </form>
        <% } %>
      </div>
    </li>
    <% }) %>
  </ul>
</div>

<!-- LOAD GEO LOCATION success() and error() FUNCTIONS  -->
<script src="/js/scripts.js"></script>
<!-- LOAD GOOGLE MAPS FUNCTIONS (called from scripts.js) -->
<script src="/js/maps.js"></script>

<!-- GOOGLE MAPS API -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB2CGd_TVDT97bT076IBQWpm3h3gFtZGJM&&libraries=&v=weekly"></script>
<script defer>
  const status = document.querySelector('#geo-status');
  const geoDataEls = document.querySelectorAll('.geo-data');

  // create new array of place lat/lng based off array of data elements containg the same
  const mapPlaces = [...geoDataEls].map((el) => {
    const latLng = {};
    const location = {};
    latLng.lat = parseFloat(el.dataset.lat);
    latLng.lng = parseFloat(el.dataset.lng);
    location.latLng = latLng;
    location.title = el.dataset.name;

    return location;
  });

  // initialize userLocation to default lat/lng. set later to accurate geolcation if possible
  let userLocation = { lat: 43, lng: -50 };

  if (!navigator.geolocation) {
    status.textContent = 'Geolocation not supported. Try a different browser.';
    // call map with default user position if not supported
    initMap(userLocation, mapPlaces);
  } else {
    status.textContent = 'Locatingâ€¦';
    // success() sets userLocation and calls initMap()
    // error() keeps default userLocation and calls initMaps
    navigator.geolocation.getCurrentPosition(success, error);
  }
</script>

<%- include('../partials/bottom.ejs') %>
